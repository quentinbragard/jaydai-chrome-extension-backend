create extension if not exists "pgjwt" with schema "extensions";


create sequence "public"."blog_posts_id_seq";

create table "public"."blog_posts" (
    "id" bigint not null default nextval('blog_posts_id_seq'::regclass),
    "title" text not null,
    "slug" text not null,
    "summary" text not null,
    "featured_image" text,
    "author" text not null,
    "published_at" timestamp with time zone not null default now(),
    "category" text not null,
    "tags" text[] default '{}'::text[],
    "status" text not null default 'draft'::text,
    "reading_time" integer not null default 5,
    "locale" text not null default 'en'::text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "call_to_action_metadata" jsonb,
    "content_metadata" jsonb[],
    "page_metadata" jsonb
);


alter table "public"."blog_posts" enable row level security;

create table "public"."chats" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "chat_provider_id" text,
    "provider_name" text,
    "title" text
);


alter table "public"."chats" enable row level security;

create table "public"."companies" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text
);


alter table "public"."companies" enable row level security;

create table "public"."landing_page_contact_form" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "email" text,
    "subject" text,
    "message" text
);


alter table "public"."landing_page_contact_form" enable row level security;

create table "public"."messages" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "chat_provider_id" text,
    "message_provider_id" text,
    "role" text,
    "model" text,
    "parent_message_provider_id" text,
    "tools" text[],
    "content" text
);


alter table "public"."messages" enable row level security;

create table "public"."notifications" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "read_at" timestamp with time zone,
    "type" text,
    "title" text,
    "body" text,
    "metadata" jsonb
);


alter table "public"."notifications" enable row level security;

create table "public"."official_folders" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "type" text,
    "tags" text[],
    "name_en" text,
    "name_fr" text
);


alter table "public"."official_folders" enable row level security;

create table "public"."organization_folders" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "type" text,
    "tags" text[],
    "path" text,
    "organization_id" uuid,
    "name_en" text,
    "name_fr" text
);


alter table "public"."organization_folders" enable row level security;

create table "public"."organizations" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "image_url" text,
    "banner_url" text,
    "website_url" text
);


alter table "public"."organizations" enable row level security;

create table "public"."prompt_blocks" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "company_id" uuid,
    "organization_id" uuid,
    "user_id" uuid,
    "type" text,
    "content" jsonb,
    "title" jsonb,
    "description" jsonb,
    "published" boolean not null default false
);


alter table "public"."prompt_blocks" enable row level security;

create table "public"."prompt_folders" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "organization_id" uuid,
    "parent_folder_id" bigint,
    "title" jsonb,
    "description" jsonb,
    "company_id" uuid,
    "type" text
);


alter table "public"."prompt_folders" enable row level security;

create table "public"."prompt_templates" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "folder_id" bigint,
    "tags" text[],
    "last_used_at" timestamp with time zone,
    "path" text,
    "type" text,
    "usage_count" bigint default '0'::bigint,
    "user_id" uuid,
    "content_custom" text,
    "content_en" text,
    "content_fr" text,
    "title_custom" text,
    "title_en" text,
    "title_fr" text,
    "title" jsonb,
    "content" jsonb,
    "description" jsonb,
    "blocks" bigint[],
    "company_id" uuid,
    "organization_id" uuid,
    "metadata" jsonb
);


alter table "public"."prompt_templates" enable row level security;

create table "public"."user_folders" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "type" text,
    "tags" text[],
    "path" text,
    "user_id" uuid,
    "description" text,
    "locale" text,
    "name" text
);


alter table "public"."user_folders" enable row level security;

create table "public"."users_metadata" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "name" text,
    "phone_number" text,
    "pinned_official_folder_ids" bigint[],
    "pinned_organization_folder_ids" bigint[],
    "preferences_metadata" jsonb,
    "additional_email" text,
    "additional_organization" text,
    "linkedin_headline" text,
    "linkedin_id" text,
    "linkedin_profile_url" text,
    "email" text,
    "google_id" text,
    "job_type" text,
    "job_industry" text,
    "job_seniority" text,
    "interests" text[],
    "signup_source" text,
    "organization_ids" uuid[],
    "company_id" uuid,
    "pinned_folder_ids" bigint[],
    "pinned_template_ids" bigint[]
);


alter table "public"."users_metadata" enable row level security;

alter sequence "public"."blog_posts_id_seq" owned by "public"."blog_posts"."id";

CREATE UNIQUE INDEX blog_posts_pkey ON public.blog_posts USING btree (id);

CREATE UNIQUE INDEX blog_posts_slug_key ON public.blog_posts USING btree (slug);

CREATE UNIQUE INDEX chats_pkey ON public.chats USING btree (id);

CREATE UNIQUE INDEX companies_pkey ON public.companies USING btree (id);

CREATE INDEX idx_blog_posts_category ON public.blog_posts USING btree (category);

CREATE INDEX idx_blog_posts_locale ON public.blog_posts USING btree (locale);

CREATE INDEX idx_blog_posts_published_at ON public.blog_posts USING btree (published_at);

CREATE INDEX idx_blog_posts_slug ON public.blog_posts USING btree (slug);

CREATE INDEX idx_blog_posts_status ON public.blog_posts USING btree (status);

CREATE INDEX idx_users_metadata_linkedin_id ON public.users_metadata USING btree (linkedin_id);

CREATE UNIQUE INDEX landing_page_contact_form_pkey ON public.landing_page_contact_form USING btree (id);

CREATE UNIQUE INDEX messages_pkey ON public.messages USING btree (id);

CREATE UNIQUE INDEX notifications_pkey ON public.notifications USING btree (id);

CREATE UNIQUE INDEX official_folders_pkey ON public.official_folders USING btree (id);

CREATE UNIQUE INDEX official_prompt_templates_pkey ON public.prompt_templates USING btree (id);

CREATE UNIQUE INDEX organization_folders_pkey ON public.organization_folders USING btree (id);

CREATE UNIQUE INDEX organizations_pkey ON public.organizations USING btree (id);

CREATE UNIQUE INDEX prompt_blocks_pkey ON public.prompt_blocks USING btree (id);

CREATE UNIQUE INDEX prompt_folders_pkey ON public.prompt_folders USING btree (id);

CREATE UNIQUE INDEX user_folders_pkey ON public.user_folders USING btree (id);

CREATE UNIQUE INDEX users_metadata_pkey ON public.users_metadata USING btree (id);

alter table "public"."blog_posts" add constraint "blog_posts_pkey" PRIMARY KEY using index "blog_posts_pkey";

alter table "public"."chats" add constraint "chats_pkey" PRIMARY KEY using index "chats_pkey";

alter table "public"."companies" add constraint "companies_pkey" PRIMARY KEY using index "companies_pkey";

alter table "public"."landing_page_contact_form" add constraint "landing_page_contact_form_pkey" PRIMARY KEY using index "landing_page_contact_form_pkey";

alter table "public"."messages" add constraint "messages_pkey" PRIMARY KEY using index "messages_pkey";

alter table "public"."notifications" add constraint "notifications_pkey" PRIMARY KEY using index "notifications_pkey";

alter table "public"."official_folders" add constraint "official_folders_pkey" PRIMARY KEY using index "official_folders_pkey";

alter table "public"."organization_folders" add constraint "organization_folders_pkey" PRIMARY KEY using index "organization_folders_pkey";

alter table "public"."organizations" add constraint "organizations_pkey" PRIMARY KEY using index "organizations_pkey";

alter table "public"."prompt_blocks" add constraint "prompt_blocks_pkey" PRIMARY KEY using index "prompt_blocks_pkey";

alter table "public"."prompt_folders" add constraint "prompt_folders_pkey" PRIMARY KEY using index "prompt_folders_pkey";

alter table "public"."prompt_templates" add constraint "official_prompt_templates_pkey" PRIMARY KEY using index "official_prompt_templates_pkey";

alter table "public"."user_folders" add constraint "user_folders_pkey" PRIMARY KEY using index "user_folders_pkey";

alter table "public"."users_metadata" add constraint "users_metadata_pkey" PRIMARY KEY using index "users_metadata_pkey";

alter table "public"."blog_posts" add constraint "blog_posts_slug_key" UNIQUE using index "blog_posts_slug_key";

alter table "public"."chats" add constraint "chats_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."chats" validate constraint "chats_user_id_fkey";

alter table "public"."messages" add constraint "messages_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."messages" validate constraint "messages_user_id_fkey";

alter table "public"."notifications" add constraint "notifications_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."notifications" validate constraint "notifications_user_id_fkey";

alter table "public"."organization_folders" add constraint "organization_folders_organization_id_fkey" FOREIGN KEY (organization_id) REFERENCES organizations(id) not valid;

alter table "public"."organization_folders" validate constraint "organization_folders_organization_id_fkey";

alter table "public"."prompt_blocks" add constraint "prompt_blocks_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) not valid;

alter table "public"."prompt_blocks" validate constraint "prompt_blocks_company_id_fkey";

alter table "public"."prompt_blocks" add constraint "prompt_blocks_organization_id_fkey" FOREIGN KEY (organization_id) REFERENCES organizations(id) not valid;

alter table "public"."prompt_blocks" validate constraint "prompt_blocks_organization_id_fkey";

alter table "public"."prompt_blocks" add constraint "prompt_blocks_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."prompt_blocks" validate constraint "prompt_blocks_user_id_fkey";

alter table "public"."prompt_folders" add constraint "prompt_folders_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) not valid;

alter table "public"."prompt_folders" validate constraint "prompt_folders_company_id_fkey";

alter table "public"."prompt_folders" add constraint "prompt_folders_organization_id_fkey" FOREIGN KEY (organization_id) REFERENCES organizations(id) not valid;

alter table "public"."prompt_folders" validate constraint "prompt_folders_organization_id_fkey";

alter table "public"."prompt_folders" add constraint "prompt_folders_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."prompt_folders" validate constraint "prompt_folders_user_id_fkey";

alter table "public"."prompt_templates" add constraint "prompt_templates_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) not valid;

alter table "public"."prompt_templates" validate constraint "prompt_templates_company_id_fkey";

alter table "public"."prompt_templates" add constraint "prompt_templates_organization_id_fkey" FOREIGN KEY (organization_id) REFERENCES organizations(id) not valid;

alter table "public"."prompt_templates" validate constraint "prompt_templates_organization_id_fkey";

alter table "public"."prompt_templates" add constraint "prompt_templates_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."prompt_templates" validate constraint "prompt_templates_user_id_fkey";

alter table "public"."user_folders" add constraint "user_folders_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."user_folders" validate constraint "user_folders_user_id_fkey";

alter table "public"."users_metadata" add constraint "users_metadata_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) not valid;

alter table "public"."users_metadata" validate constraint "users_metadata_company_id_fkey";

alter table "public"."users_metadata" add constraint "users_metadata_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."users_metadata" validate constraint "users_metadata_user_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.update_updated_at_column()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$function$
;

grant delete on table "public"."blog_posts" to "anon";

grant insert on table "public"."blog_posts" to "anon";

grant references on table "public"."blog_posts" to "anon";

grant select on table "public"."blog_posts" to "anon";

grant trigger on table "public"."blog_posts" to "anon";

grant truncate on table "public"."blog_posts" to "anon";

grant update on table "public"."blog_posts" to "anon";

grant delete on table "public"."blog_posts" to "authenticated";

grant insert on table "public"."blog_posts" to "authenticated";

grant references on table "public"."blog_posts" to "authenticated";

grant select on table "public"."blog_posts" to "authenticated";

grant trigger on table "public"."blog_posts" to "authenticated";

grant truncate on table "public"."blog_posts" to "authenticated";

grant update on table "public"."blog_posts" to "authenticated";

grant delete on table "public"."blog_posts" to "service_role";

grant insert on table "public"."blog_posts" to "service_role";

grant references on table "public"."blog_posts" to "service_role";

grant select on table "public"."blog_posts" to "service_role";

grant trigger on table "public"."blog_posts" to "service_role";

grant truncate on table "public"."blog_posts" to "service_role";

grant update on table "public"."blog_posts" to "service_role";

grant delete on table "public"."chats" to "anon";

grant insert on table "public"."chats" to "anon";

grant references on table "public"."chats" to "anon";

grant select on table "public"."chats" to "anon";

grant trigger on table "public"."chats" to "anon";

grant truncate on table "public"."chats" to "anon";

grant update on table "public"."chats" to "anon";

grant delete on table "public"."chats" to "authenticated";

grant insert on table "public"."chats" to "authenticated";

grant references on table "public"."chats" to "authenticated";

grant select on table "public"."chats" to "authenticated";

grant trigger on table "public"."chats" to "authenticated";

grant truncate on table "public"."chats" to "authenticated";

grant update on table "public"."chats" to "authenticated";

grant delete on table "public"."chats" to "service_role";

grant insert on table "public"."chats" to "service_role";

grant references on table "public"."chats" to "service_role";

grant select on table "public"."chats" to "service_role";

grant trigger on table "public"."chats" to "service_role";

grant truncate on table "public"."chats" to "service_role";

grant update on table "public"."chats" to "service_role";

grant delete on table "public"."companies" to "anon";

grant insert on table "public"."companies" to "anon";

grant references on table "public"."companies" to "anon";

grant select on table "public"."companies" to "anon";

grant trigger on table "public"."companies" to "anon";

grant truncate on table "public"."companies" to "anon";

grant update on table "public"."companies" to "anon";

grant delete on table "public"."companies" to "authenticated";

grant insert on table "public"."companies" to "authenticated";

grant references on table "public"."companies" to "authenticated";

grant select on table "public"."companies" to "authenticated";

grant trigger on table "public"."companies" to "authenticated";

grant truncate on table "public"."companies" to "authenticated";

grant update on table "public"."companies" to "authenticated";

grant delete on table "public"."companies" to "service_role";

grant insert on table "public"."companies" to "service_role";

grant references on table "public"."companies" to "service_role";

grant select on table "public"."companies" to "service_role";

grant trigger on table "public"."companies" to "service_role";

grant truncate on table "public"."companies" to "service_role";

grant update on table "public"."companies" to "service_role";

grant delete on table "public"."landing_page_contact_form" to "anon";

grant insert on table "public"."landing_page_contact_form" to "anon";

grant references on table "public"."landing_page_contact_form" to "anon";

grant select on table "public"."landing_page_contact_form" to "anon";

grant trigger on table "public"."landing_page_contact_form" to "anon";

grant truncate on table "public"."landing_page_contact_form" to "anon";

grant update on table "public"."landing_page_contact_form" to "anon";

grant delete on table "public"."landing_page_contact_form" to "authenticated";

grant insert on table "public"."landing_page_contact_form" to "authenticated";

grant references on table "public"."landing_page_contact_form" to "authenticated";

grant select on table "public"."landing_page_contact_form" to "authenticated";

grant trigger on table "public"."landing_page_contact_form" to "authenticated";

grant truncate on table "public"."landing_page_contact_form" to "authenticated";

grant update on table "public"."landing_page_contact_form" to "authenticated";

grant delete on table "public"."landing_page_contact_form" to "service_role";

grant insert on table "public"."landing_page_contact_form" to "service_role";

grant references on table "public"."landing_page_contact_form" to "service_role";

grant select on table "public"."landing_page_contact_form" to "service_role";

grant trigger on table "public"."landing_page_contact_form" to "service_role";

grant truncate on table "public"."landing_page_contact_form" to "service_role";

grant update on table "public"."landing_page_contact_form" to "service_role";

grant delete on table "public"."messages" to "anon";

grant insert on table "public"."messages" to "anon";

grant references on table "public"."messages" to "anon";

grant select on table "public"."messages" to "anon";

grant trigger on table "public"."messages" to "anon";

grant truncate on table "public"."messages" to "anon";

grant update on table "public"."messages" to "anon";

grant delete on table "public"."messages" to "authenticated";

grant insert on table "public"."messages" to "authenticated";

grant references on table "public"."messages" to "authenticated";

grant select on table "public"."messages" to "authenticated";

grant trigger on table "public"."messages" to "authenticated";

grant truncate on table "public"."messages" to "authenticated";

grant update on table "public"."messages" to "authenticated";

grant delete on table "public"."messages" to "service_role";

grant insert on table "public"."messages" to "service_role";

grant references on table "public"."messages" to "service_role";

grant select on table "public"."messages" to "service_role";

grant trigger on table "public"."messages" to "service_role";

grant truncate on table "public"."messages" to "service_role";

grant update on table "public"."messages" to "service_role";

grant delete on table "public"."notifications" to "anon";

grant insert on table "public"."notifications" to "anon";

grant references on table "public"."notifications" to "anon";

grant select on table "public"."notifications" to "anon";

grant trigger on table "public"."notifications" to "anon";

grant truncate on table "public"."notifications" to "anon";

grant update on table "public"."notifications" to "anon";

grant delete on table "public"."notifications" to "authenticated";

grant insert on table "public"."notifications" to "authenticated";

grant references on table "public"."notifications" to "authenticated";

grant select on table "public"."notifications" to "authenticated";

grant trigger on table "public"."notifications" to "authenticated";

grant truncate on table "public"."notifications" to "authenticated";

grant update on table "public"."notifications" to "authenticated";

grant delete on table "public"."notifications" to "service_role";

grant insert on table "public"."notifications" to "service_role";

grant references on table "public"."notifications" to "service_role";

grant select on table "public"."notifications" to "service_role";

grant trigger on table "public"."notifications" to "service_role";

grant truncate on table "public"."notifications" to "service_role";

grant update on table "public"."notifications" to "service_role";

grant delete on table "public"."official_folders" to "anon";

grant insert on table "public"."official_folders" to "anon";

grant references on table "public"."official_folders" to "anon";

grant select on table "public"."official_folders" to "anon";

grant trigger on table "public"."official_folders" to "anon";

grant truncate on table "public"."official_folders" to "anon";

grant update on table "public"."official_folders" to "anon";

grant delete on table "public"."official_folders" to "authenticated";

grant insert on table "public"."official_folders" to "authenticated";

grant references on table "public"."official_folders" to "authenticated";

grant select on table "public"."official_folders" to "authenticated";

grant trigger on table "public"."official_folders" to "authenticated";

grant truncate on table "public"."official_folders" to "authenticated";

grant update on table "public"."official_folders" to "authenticated";

grant delete on table "public"."official_folders" to "service_role";

grant insert on table "public"."official_folders" to "service_role";

grant references on table "public"."official_folders" to "service_role";

grant select on table "public"."official_folders" to "service_role";

grant trigger on table "public"."official_folders" to "service_role";

grant truncate on table "public"."official_folders" to "service_role";

grant update on table "public"."official_folders" to "service_role";

grant delete on table "public"."organization_folders" to "anon";

grant insert on table "public"."organization_folders" to "anon";

grant references on table "public"."organization_folders" to "anon";

grant select on table "public"."organization_folders" to "anon";

grant trigger on table "public"."organization_folders" to "anon";

grant truncate on table "public"."organization_folders" to "anon";

grant update on table "public"."organization_folders" to "anon";

grant delete on table "public"."organization_folders" to "authenticated";

grant insert on table "public"."organization_folders" to "authenticated";

grant references on table "public"."organization_folders" to "authenticated";

grant select on table "public"."organization_folders" to "authenticated";

grant trigger on table "public"."organization_folders" to "authenticated";

grant truncate on table "public"."organization_folders" to "authenticated";

grant update on table "public"."organization_folders" to "authenticated";

grant delete on table "public"."organization_folders" to "service_role";

grant insert on table "public"."organization_folders" to "service_role";

grant references on table "public"."organization_folders" to "service_role";

grant select on table "public"."organization_folders" to "service_role";

grant trigger on table "public"."organization_folders" to "service_role";

grant truncate on table "public"."organization_folders" to "service_role";

grant update on table "public"."organization_folders" to "service_role";

grant delete on table "public"."organizations" to "anon";

grant insert on table "public"."organizations" to "anon";

grant references on table "public"."organizations" to "anon";

grant select on table "public"."organizations" to "anon";

grant trigger on table "public"."organizations" to "anon";

grant truncate on table "public"."organizations" to "anon";

grant update on table "public"."organizations" to "anon";

grant delete on table "public"."organizations" to "authenticated";

grant insert on table "public"."organizations" to "authenticated";

grant references on table "public"."organizations" to "authenticated";

grant select on table "public"."organizations" to "authenticated";

grant trigger on table "public"."organizations" to "authenticated";

grant truncate on table "public"."organizations" to "authenticated";

grant update on table "public"."organizations" to "authenticated";

grant delete on table "public"."organizations" to "service_role";

grant insert on table "public"."organizations" to "service_role";

grant references on table "public"."organizations" to "service_role";

grant select on table "public"."organizations" to "service_role";

grant trigger on table "public"."organizations" to "service_role";

grant truncate on table "public"."organizations" to "service_role";

grant update on table "public"."organizations" to "service_role";

grant delete on table "public"."prompt_blocks" to "anon";

grant insert on table "public"."prompt_blocks" to "anon";

grant references on table "public"."prompt_blocks" to "anon";

grant select on table "public"."prompt_blocks" to "anon";

grant trigger on table "public"."prompt_blocks" to "anon";

grant truncate on table "public"."prompt_blocks" to "anon";

grant update on table "public"."prompt_blocks" to "anon";

grant delete on table "public"."prompt_blocks" to "authenticated";

grant insert on table "public"."prompt_blocks" to "authenticated";

grant references on table "public"."prompt_blocks" to "authenticated";

grant select on table "public"."prompt_blocks" to "authenticated";

grant trigger on table "public"."prompt_blocks" to "authenticated";

grant truncate on table "public"."prompt_blocks" to "authenticated";

grant update on table "public"."prompt_blocks" to "authenticated";

grant delete on table "public"."prompt_blocks" to "service_role";

grant insert on table "public"."prompt_blocks" to "service_role";

grant references on table "public"."prompt_blocks" to "service_role";

grant select on table "public"."prompt_blocks" to "service_role";

grant trigger on table "public"."prompt_blocks" to "service_role";

grant truncate on table "public"."prompt_blocks" to "service_role";

grant update on table "public"."prompt_blocks" to "service_role";

grant delete on table "public"."prompt_folders" to "anon";

grant insert on table "public"."prompt_folders" to "anon";

grant references on table "public"."prompt_folders" to "anon";

grant select on table "public"."prompt_folders" to "anon";

grant trigger on table "public"."prompt_folders" to "anon";

grant truncate on table "public"."prompt_folders" to "anon";

grant update on table "public"."prompt_folders" to "anon";

grant delete on table "public"."prompt_folders" to "authenticated";

grant insert on table "public"."prompt_folders" to "authenticated";

grant references on table "public"."prompt_folders" to "authenticated";

grant select on table "public"."prompt_folders" to "authenticated";

grant trigger on table "public"."prompt_folders" to "authenticated";

grant truncate on table "public"."prompt_folders" to "authenticated";

grant update on table "public"."prompt_folders" to "authenticated";

grant delete on table "public"."prompt_folders" to "service_role";

grant insert on table "public"."prompt_folders" to "service_role";

grant references on table "public"."prompt_folders" to "service_role";

grant select on table "public"."prompt_folders" to "service_role";

grant trigger on table "public"."prompt_folders" to "service_role";

grant truncate on table "public"."prompt_folders" to "service_role";

grant update on table "public"."prompt_folders" to "service_role";

grant delete on table "public"."prompt_templates" to "anon";

grant insert on table "public"."prompt_templates" to "anon";

grant references on table "public"."prompt_templates" to "anon";

grant select on table "public"."prompt_templates" to "anon";

grant trigger on table "public"."prompt_templates" to "anon";

grant truncate on table "public"."prompt_templates" to "anon";

grant update on table "public"."prompt_templates" to "anon";

grant delete on table "public"."prompt_templates" to "authenticated";

grant insert on table "public"."prompt_templates" to "authenticated";

grant references on table "public"."prompt_templates" to "authenticated";

grant select on table "public"."prompt_templates" to "authenticated";

grant trigger on table "public"."prompt_templates" to "authenticated";

grant truncate on table "public"."prompt_templates" to "authenticated";

grant update on table "public"."prompt_templates" to "authenticated";

grant delete on table "public"."prompt_templates" to "service_role";

grant insert on table "public"."prompt_templates" to "service_role";

grant references on table "public"."prompt_templates" to "service_role";

grant select on table "public"."prompt_templates" to "service_role";

grant trigger on table "public"."prompt_templates" to "service_role";

grant truncate on table "public"."prompt_templates" to "service_role";

grant update on table "public"."prompt_templates" to "service_role";

grant delete on table "public"."user_folders" to "anon";

grant insert on table "public"."user_folders" to "anon";

grant references on table "public"."user_folders" to "anon";

grant select on table "public"."user_folders" to "anon";

grant trigger on table "public"."user_folders" to "anon";

grant truncate on table "public"."user_folders" to "anon";

grant update on table "public"."user_folders" to "anon";

grant delete on table "public"."user_folders" to "authenticated";

grant insert on table "public"."user_folders" to "authenticated";

grant references on table "public"."user_folders" to "authenticated";

grant select on table "public"."user_folders" to "authenticated";

grant trigger on table "public"."user_folders" to "authenticated";

grant truncate on table "public"."user_folders" to "authenticated";

grant update on table "public"."user_folders" to "authenticated";

grant delete on table "public"."user_folders" to "service_role";

grant insert on table "public"."user_folders" to "service_role";

grant references on table "public"."user_folders" to "service_role";

grant select on table "public"."user_folders" to "service_role";

grant trigger on table "public"."user_folders" to "service_role";

grant truncate on table "public"."user_folders" to "service_role";

grant update on table "public"."user_folders" to "service_role";

grant delete on table "public"."users_metadata" to "anon";

grant insert on table "public"."users_metadata" to "anon";

grant references on table "public"."users_metadata" to "anon";

grant select on table "public"."users_metadata" to "anon";

grant trigger on table "public"."users_metadata" to "anon";

grant truncate on table "public"."users_metadata" to "anon";

grant update on table "public"."users_metadata" to "anon";

grant delete on table "public"."users_metadata" to "authenticated";

grant insert on table "public"."users_metadata" to "authenticated";

grant references on table "public"."users_metadata" to "authenticated";

grant select on table "public"."users_metadata" to "authenticated";

grant trigger on table "public"."users_metadata" to "authenticated";

grant truncate on table "public"."users_metadata" to "authenticated";

grant update on table "public"."users_metadata" to "authenticated";

grant delete on table "public"."users_metadata" to "service_role";

grant insert on table "public"."users_metadata" to "service_role";

grant references on table "public"."users_metadata" to "service_role";

grant select on table "public"."users_metadata" to "service_role";

grant trigger on table "public"."users_metadata" to "service_role";

grant truncate on table "public"."users_metadata" to "service_role";

grant update on table "public"."users_metadata" to "service_role";

create policy "Enable read access for all users"
on "public"."blog_posts"
as permissive
for select
to public
using (true);


create policy "Enable insert for users based on user_id"
on "public"."chats"
as permissive
for insert
to authenticated
with check ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable read for users based on user_id"
on "public"."chats"
as permissive
for select
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable insert access for all users"
on "public"."landing_page_contact_form"
as permissive
for insert
to public
with check (true);


create policy "Enable insert for users based on user_id"
on "public"."messages"
as permissive
for insert
to authenticated
with check ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable read for users based on user_id"
on "public"."messages"
as permissive
for select
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable insert for service role only"
on "public"."notifications"
as permissive
for insert
to service_role
with check (true);


create policy "Enable read for users based on user_id"
on "public"."notifications"
as permissive
for select
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable read access for authenticated users"
on "public"."official_folders"
as permissive
for select
to authenticated
using (true);


create policy "Enable read access for all users"
on "public"."prompt_blocks"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."prompt_templates"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read for authenticated users only"
on "public"."prompt_templates"
as permissive
for select
to authenticated
using (true);


create policy "Enable insert for users based on user_id"
on "public"."user_folders"
as permissive
for insert
to authenticated
with check ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable read for users based on user_id"
on "public"."user_folders"
as permissive
for select
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));


create policy "Enable insert for service role only"
on "public"."users_metadata"
as permissive
for insert
to public
with check (true);


create policy "Enable read for users based on user_id"
on "public"."users_metadata"
as permissive
for select
to authenticated
using ((( SELECT auth.uid() AS uid) = user_id));



